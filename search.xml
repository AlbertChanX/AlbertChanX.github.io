<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title><![CDATA[run-Django-Website-on-pythonanywhere]]></title>
    <url>%2F2018%2F03%2F21%2Frun-Django-Website-on-pythonanywhere%2F</url>
    <content type="text"><![CDATA[¶PythonAnyWhere with Django clone in ur console 1git clone (my-first-blog) make a virtual environment 1234$ cd my-first-blog$ virtualenv --python=python(version eg. 3.6) myvenv$ source myvenv/bin/activate(myvenv) $ pip install django==(version) initial ur database 123(myvenv) $ python manage.py migrate (check lib&amp;db)&lt;!-- python manage.py makemigrations --&gt;(myvenv) $ python manage.py createsuperuser publish Web App 123Web tab -&gt; click “Add a new web app”-&gt; verify domain -&gt; choose manual configuration(not &apos;Django&apos;) -&gt; choose Python(version) -&gt; Next to end. deploy app’s virtual environment 123Web tab -&gt; Virtualenv -&gt; write down the location of (myvenv)[/home/username/my-first-blog/myvenv]-&gt; config wsgi.py go to WSGI configuration file 12345678910111213import osimport sys# replace [actual varible]path = '/home/[username]/[my-first-blog]' if path not in sys.path: sys.path.append(path)# 在这里mysite请用settings.py所在文件夹名 (app Name)os.environ['DJANGO_SETTINGS_MODULE'] = 'mysite.settings' from django.core.wsgi import get_wsgi_applicationfrom django.contrib.staticfiles.handlers import StaticFilesHandlerapplication = StaticFilesHandler(get_wsgi_application()) change settings.py 1ALLOWED_HOSTS = ['*'] synchronize app 12cd my-first-bloggit pull ¶Reference 使用PythonAnyWhere和GitHub免费部署Django网站 - 潜入深蓝 - SegmentFault 思否 Pythonanywhere 部署 Django - 简书 【兰山问题】Django中的静态文件 - 简书]]></content>
  </entry>
  <entry>
    <title><![CDATA[How-to-use-MarkDown]]></title>
    <url>%2F2018%2F03%2F19%2FHow-to-use-MarkDown%2F</url>
    <content type="text"><![CDATA[Markdown syntax ¶Quick Start pls don’t start with emoj! ¶styling-text 1234*italic***bold**~~Strikethrough~~**This text is _extremely_ important** italic bold Strikethrough This text is extremely important More info: styling-text ¶Quoting code 123456Some basic Git commands are:`` ``` ``git statusgit addgit commit`` ``` `` 123git statusgit addgit commit For more information, see creating-and-highlighting-code-blocks ¶Links You can create an inline link by wrapping link text in brackets [ ], and then wrapping the URL in parentheses ( ). You can also use the keyboard shortcut command + k to create a link. 1This site was built using [GitHub Pages](https://pages.github.com/). ¶Task lists 123- [x] Finish my changes- [ ] Push my commits to GitHub- [ ] Open a pull request like this: [x] Finish my changes [ ] Push my commits to GitHub [ ] Open a pull request ¶Using emoji 1@octocat :+1: This PR looks great - it&apos;s ready to merge! :shipit: @octocat This PR looks great - it’s ready to merge! :shipit: For a full list of available emoji and codes, check out emoji-cheat-sheet.com. ¶Reference writing-on-github]]></content>
      <tags>
        <tag>MarkDown</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[test]]></title>
    <url>%2F2018%2F03%2F18%2Ftest%2F</url>
    <content type="text"></content>
  </entry>
  <entry>
    <title><![CDATA[Hello World]]></title>
    <url>%2F2018%2F03%2F18%2Fhello-world%2F</url>
    <content type="text"><![CDATA[Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. ¶Quick Start ¶Create a new post 1$ hexo new "My New Post" More info: Writing ¶Run server 1$ hexo server More info: Server ¶Generate static files 1$ hexo generate More info: Generating ¶Deploy to remote sites 1$ hexo deploy More info: Deployment ¶Hexo Plugin More info: markdown-it-emoji CSS hexo-generator-search search]]></content>
  </entry>
</search>
